//This contract holds a state variable and uses delegate call to execute the logic of TargetContract
which then updates the state variable in StorageContract.
// SPDX-License-Identifier: MIT
pragma solidity ^0.8.18;

contract StorageContract {

    uint256 public value;
    address public targetContractAddress;  // The address of the TargetContract

    constructor(address _targetContractAddress) {
        targetContractAddress = _targetContractAddress;
    }

    function updateValue(uint256 amount) external {
        require(msg.sender == address(this), "Only callable internally");
        value += amount;
    }

    function increaseValueByDelegateCall(uint256 amount) external {
        // Make a delegate call to the target contract
        (bool success, ) = targetContractAddress.delegatecall(
            abi.encodeWithSignature("increaseBy(uint256,address)", amount, address(this))
        );
        require(success, "Delegate call failed");
    }
}
